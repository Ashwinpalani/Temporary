CREATE PROCEDURE [DBO].[EMAIL_DETAIL_REPORT_MULTIPLE_RECORDS_PRC]
@INPUT_PARAMS VARCHAR(MAX),
@STATUS NVARCHAR(255) OUTPUT

AS
DECLARE
		@END_TIME             	DATETIME,
		@TIMEINTERVAL_IN_MINS 	INT,
		@START_TIME           	DATETIME,
		@V_PARAM_NAME 		  	VARCHAR(50),
		@V_SOURCE			  	VARCHAR(50),
		@V_WORKREQUEST_ID 	  	VARCHAR(MAX) = NULL
BEGIN
DECLARE    
		@QUEUENAME 			  	VARCHAR(10) = NULL,	
		@CONTACT_KEY          	VARCHAR(200) = NULL,
		@CHAT_ID 			  	VARCHAR(200) = NULL,
		@CREATEDATE 		  	DATETIME = NULL,				
		@QUEUETIME 			  	BIGINT = NULL,
		@TRANSFERED			  	VARCHAR(10) = NULL,
		@CONTACT_DURATION     	BIGINT = NULL,
		@HANDLING_TIME_DURATION BIGINT = NULL,
		@ABANDON				VARCHAR(50) = NULL,
		@FROMADDRESS		  	VARCHAR(100) = NULL,
		@V_UNKNOWN              BIGINT = NULL,
		@V_ACTIVE_TIME_DURATION BIGINT = NULL,
		@ENDTIME                DATETIME = NULL,
		@V_HOLD_DURATION		BIGINT = NULL
		
   SET NOCOUNT ON;

   SET @V_WORKREQUEST_ID = (SELECT * FROM DBO.[STRINGSPLIT](@INPUT_PARAMS,',','WORKREQUEST_ID'))
   SET @V_PARAM_NAME = (SELECT * FROM DBO.[STRINGSPLIT](@INPUT_PARAMS,',','PARAM_NAME'))   
   SET @V_SOURCE = (SELECT * FROM DBO.[STRINGSPLIT](@INPUT_PARAMS,',','SOURCE'))
   
   IF @V_SOURCE = 'SCHEDULER'
   SET @V_PARAM_NAME = 'EMAIL_DETAILED_REPORT_START_TIME_NEW';
   
   SELECT @START_TIME = CONVERT(DATETIME, PARAM_VALUE, 121) FROM CONFIG_PARAMS WHERE PARAM_NAME = @V_PARAM_NAME   
   SELECT @TIMEINTERVAL_IN_MINS = CAST(PARAM_VALUE AS INT) FROM CONFIG_PARAMS WHERE PARAM_NAME = 'INTERVAL_IN_MINUTES'   
   SET @END_TIME = DATEADD(MINUTE, @TIMEINTERVAL_IN_MINS, @START_TIME)
   
BEGIN
PRINT @V_WORKREQUEST_ID
IF @V_WORKREQUEST_ID IS NOT NULL AND @V_WORKREQUEST_ID != ''
 BEGIN
   PRINT 'V_WORKREQUEST_ID IS NOT EMPTY'
   DECLARE EMAIL_REPORT_DATA_CURSOR CURSOR FOR
   SELECT ORIGINATED_TIMESTAMP, ROUTING_SERVICE_SK, ENGAGEMENT_ID, CONTACT_ID, ISNULL(WAIT_TIME,0) AS QUEUETIME, CASE WHEN ABANDONED_INDICATOR = 'T' THEN '1' ELSE '0' END AS ABANDON, CASE WHEN TRANSFERRED_INDICATOR = 'T' THEN '1' ELSE '0' END AS TRANSFERED, CALLING_PARTY, ISNULL(CONTACT_DURATION,0),ISNULL(HANDLING_TIME_DURATION,0), END_TIMESTAMP, CASE WHEN SEGMENT_TYPE = 'UNKNOWN' THEN '1' ELSE '0' END AS UNKNOWN, ISNULL(ACTIVE_TIME_DURATION,0),ISNULL(HOLD_DURATION,0) FROM CDR_CONTACTS WHERE IS_EXTERNAL = 'T' and ENGAGEMENT_ID = @V_WORKREQUEST_ID AND (ROUTING_SERVICE_SK IN (SELECT ROUTING_SERVICE_SK FROM DIM_ROUTING_SERVICES WHERE ROUTING_SERVICE_NAME LIKE '%EMAIL%') or ROUTING_SERVICE_SK = '-1') ORDER BY ORIGINATED_TIMESTAMP ;
 END
ELSE
 BEGIN
  --PRINT 'V_WORKREQUEST_ID IS EMPTY'
   DECLARE EMAIL_REPORT_DATA_CURSOR CURSOR FOR
   SELECT ORIGINATED_TIMESTAMP, ROUTING_SERVICE_SK, ENGAGEMENT_ID, CONTACT_ID, ISNULL(WAIT_TIME,0) AS QUEUETIME, CASE WHEN ABANDONED_INDICATOR = 'T' THEN '1' ELSE '0' END AS ABANDON, CASE WHEN TRANSFERRED_INDICATOR = 'T' THEN '1' ELSE '0' END AS TRANSFERED, CALLING_PARTY,ISNULL(CONTACT_DURATION,0), ISNULL(HANDLING_TIME_DURATION,0), END_TIMESTAMP, CASE WHEN SEGMENT_TYPE = 'UNKNOWN' THEN '1' ELSE '0' END AS UNKNOWN, ISNULL(ACTIVE_TIME_DURATION,0),ISNULL(HOLD_DURATION,0) FROM CDR_CONTACTS WHERE IS_EXTERNAL = 'T' AND (ROUTING_SERVICE_SK IN (SELECT ROUTING_SERVICE_SK FROM DIM_ROUTING_SERVICES WHERE ROUTING_SERVICE_NAME LIKE '%EMAIL%') or ROUTING_SERVICE_SK = '-1') AND ORIGINATED_TIMESTAMP > = @START_TIME AND ORIGINATED_TIMESTAMP < @END_TIME ORDER BY ORIGINATED_TIMESTAMP;
  END

   OPEN EMAIL_REPORT_DATA_CURSOR
   FETCH NEXT FROM EMAIL_REPORT_DATA_CURSOR
   INTO 
     @CREATEDATE
    ,@QUEUENAME
    ,@CONTACT_KEY
    ,@CHAT_ID 
    ,@QUEUETIME  
	,@ABANDON
    ,@TRANSFERED	
    ,@FROMADDRESS
    ,@CONTACT_DURATION 
    ,@HANDLING_TIME_DURATION
	,@ENDTIME
	,@V_UNKNOWN
	,@V_ACTIVE_TIME_DURATION
	,@V_HOLD_DURATION
	
	 
   WHILE @@FETCH_STATUS = 0
   BEGIN
   IF EXISTS (SELECT * FROM CDR_SEGMENTS WHERE ENGAGEMENT_ID = @CONTACT_KEY AND CONTACT_ID = @CHAT_ID AND ROUTING_SERVICE_SK IN (SELECT ROUTING_SERVICE_SK FROM DIM_ROUTING_SERVICES WHERE ROUTING_SERVICE_NAME LIKE '%EMAIL%'))
   BEGIN
    
	DELETE FROM [EMAIL_DETAILED_REPORT_MULTIPLE_RECORDS] WHERE CONTACTKEY = @CONTACT_KEY AND CHATID = @CHAT_ID;
			
		DECLARE
		@REQUEUED			  VARCHAR(10) = NULL,
		@CANCEL				  BIGINT = NULL,
		@SUBJECT 			  VARCHAR(200) = NULL,
		@TOADDRESS			  VARCHAR(100) = NULL,      
		@DISMISSED			  VARCHAR(10) = NULL,
		@V_CUSTOMER_SEGMENT   VARCHAR(150) = NULL,		
		@UTC_QUARTER_HOUR_SK  VARCHAR(50) = NULL,		
		@SEGMENT_SIZE 		  BIGINT = NULL,
		@LAST_SEGMENT_DATA    VARCHAR(50) = NULL
		
		IF @START_TIME = ""
		BEGIN
		SELECT @START_TIME = CASE WHEN DATEPART(MINUTE,@CREATEDATE) < 15 THEN DATEADD(HOUR,DATEDIFF(HOUR,0,@CREATEDATE),0) WHEN DATEPART(MINUTE,@CREATEDATE) < 30 THEN DATEADD(MI,15,DATEADD(HOUR,DATEDIFF(HOUR,0,@CREATEDATE),0)) WHEN DATEPART(MINUTE,@CREATEDATE) < 45 THEN DATEADD(MI,30,DATEADD(HOUR,DATEDIFF(HOUR,0,@CREATEDATE),0)) ELSE DATEADD(MI,45,DATEADD(HOUR,DATEDIFF(HOUR,0,@CREATEDATE),0)) END FROM CDR_CONTACTS WHERE ENGAGEMENT_ID = @CONTACT_KEY;

		SELECT @TIMEINTERVAL_IN_MINS = CAST(PARAM_VALUE AS INT) FROM CONFIG_PARAMS WHERE PARAM_NAME = 'INTERVAL_IN_MINUTES'  
  
		SET @END_TIME = DATEADD(MINUTE, @TIMEINTERVAL_IN_MINS, @START_TIME)  
		END

	SELECT TOP 1 @SUBJECT = SUBJECT , @TOADDRESS = MAILBOX ,@DISMISSED = CASE WHEN IS_DISMISSED = 'YES' THEN '1' ELSE '0' END, @V_CUSTOMER_SEGMENT = CUSTOMER_SEGMENT FROM OCEANACADB.DBO.OC_EMAIL_INTERACTIONS WHERE DIRECTION = 'INCOMING' AND WORKREQUEST_ID = @CONTACT_KEY ORDER BY CREATED_TIME;
			
	SELECT @CANCEL  = COUNT(*) FROM OCEANACADB.DBO.OC_EMAIL_SUPERVISOR_ACTIVITY WHERE WORKREQUEST_ID = @CONTACT_KEY AND OPERATION_STATUS = 'SUCCESS' AND RESOLVE_TYPE = 'DISMISS'; --AND OPERATION_PERFORMED_TIME >= @START_TIME AND OPERATION_PERFORMED_TIME < @END_TIME--;
	
	SELECT @REQUEUED  = COUNT(*) FROM OCEANACADB.DBO.OC_EMAIL_SUPERVISOR_ACTIVITY WHERE WORKREQUEST_ID = @CONTACT_KEY AND OPERATION_STATUS = 'SUCCESS' AND RESOLVE_TYPE IN ('ASSIGN TO AN AGENT', 'ASSIGN TO SERVICE'); --AND OPERATION_PERFORMED_TIME >= @START_TIME AND OPERATION_PERFORMED_TIME < @END_TIME;
	
	SELECT @UTC_QUARTER_HOUR_SK = REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR(16),CONVERT(VARCHAR ,@START_TIME ,121) ,101),':','') ,'-',''),' ','');
	
	CREATE TABLE #WIDGET_INTERACTION_TIME (WORKREQUEST_ID VARCHAR(MAX),INTERACTION_FOCUSED_TIME BIGINT, INTERACTION_NON_FOCUSED_TIME BIGINT,ARRAYINDEX INT IDENTITY(1,1));

	CREATE TABLE #WIDGET_ACW_TIME (WORKREQUEST_ID VARCHAR(MAX),ACW_FOCUSED_TIME BIGINT, ACW_NON_FOCUSED_TIME BIGINT,ARRAYINDEX INT IDENTITY(1,1));

	CREATE TABLE #SEGMENT_TIME (WORKREQUEST_ID VARCHAR(MAX), SEGMENT_ID VARCHAR(MAX), SEGMENT_ORIGINATED_TIMESTAMP DATETIME, SEGMENT_END_TIMESTAMP DATETIME, ORDER_ID VARCHAR(MAX));

	INSERT INTO #WIDGET_INTERACTION_TIME SELECT WORK_REQUEST_ID AS WORKREQUEST_ID, ISNULL(CAST(TOTAL_INTERACTION_FOCUSED_TIME AS BIGINT),0) AS INTERACTION_FOCUSED_TIME, ISNULL(CAST(TOTAL_INTERACTION_NON_FOCUSED_TIME AS BIGINT),0) AS INTERACTION_NON_FOCUSED_TIME FROM [CUSTOMWIDGETDB].[DBO].WIDGET_EMAIL_DETAILS WHERE WORK_REQUEST_ID = @CONTACT_KEY AND CONTACT_ID = @CHAT_ID AND INTERACTION_MODE IN ('CALLED','TRANSFERRED') ORDER BY OFFERED_TIME;

	INSERT INTO #WIDGET_ACW_TIME SELECT WORK_REQUEST_ID AS WORKREQUEST_ID, ISNULL(CAST(TOTAL_ACW_FOCUSED_TIME AS BIGINT),0) AS ACW_FOCUSED_TIME, ISNULL(CAST(TOTAL_ACW_NON_FOCUSED_TIME AS BIGINT),0) AS ACW_NON_FOCUSED_TIME FROM [CUSTOMWIDGETDB].[DBO].WIDGET_EMAIL_DETAILS WHERE WORK_REQUEST_ID = @CONTACT_KEY AND CONTACT_ID = @CHAT_ID AND INTERACTION_MODE IN ('CALLED') ORDER BY OFFERED_TIME;
	 
	INSERT INTO #SEGMENT_TIME SELECT ENGAGEMENT_ID AS WORKREQUEST_ID, SEGMENT_ID AS SEGMENT_ID, ORIGINATED_TIMESTAMP AS SEGMENT_ORIGINATED_TIMESTAMP, END_TIMESTAMP AS SEGMENT_END_TIMESTAMP, ROW_NUMBER() OVER(ORDER BY ORIGINATED_TIMESTAMP) AS ORDER_ID WHERE ENGAGEMENT_ID = @CONTACT_KEY AND CONTACT_ID = @CHAT_ID ORDER BY ORIGINATED_TIMESTAMP;
	
	SELECT @SEGMENT_SIZE = COUNT(*) FROM CDR_SEGMENTS WHERE ENGAGEMENT_ID = @CONTACT_KEY AND CONTACT_ID = @CHAT_ID;
	
	SET @QUEUETIME = ISNULL(@QUEUETIME,0);
	
	--IF EXISTS (SELECT * FROM CDR_SEGMENTS WHERE ENGAGEMENT_ID = @CONTACT_KEY AND CONTACT_ID = @CHAT_ID AND ROUTING_SERVICE_SK IN (SELECT ROUTING_SERVICE_SK FROM DIM_ROUTING_SERVICES WHERE ROUTING_SERVICE_NAME LIKE '%EMAIL%'))
	--BEGIN
	
	DECLARE
		@AGENT_SK			  BIGINT = NULL,
		@SERVICELEVEL 		  BIGINT = NULL,
		@EMAILWRITETIME 	  BIGINT = NULL,
		@WRAPTIME 			  BIGINT = NULL,
		@EXIT_REASON		  VARCHAR(50) = NULL,
		@ANSWERTIME 		  DATETIME = NULL,
		@RONA 				  VARCHAR(10) = NULL,
		@ANSWERED			  VARCHAR(10) = NULL,
		@SERVICE_LEVEL_UPPER_THRESHOLD VARCHAR(50) = NULL,
		@WITHIN_SERVICE_LEVEL		  VARCHAR(100) = NULL,
        @BEHIND_SERVICE_LEVEL		  VARCHAR(100) = NULL,
        @AVG_BACKLOG		  BIGINT = NULL,
        @BACKLOG_HR			  BIGINT = NULL,
        @AVG_CYCLE_LATE		  BIGINT = NULL,
		@AHT   				  BIGINT = NULL,
		@LOGINNAME			  VARCHAR(50) = NULL,
		@DEFERRED				VARCHAR(50) = NULL,
		@AGENT_RESPONSE_TIME	DATETIME = NULL,			
		@OTHERS 				BIGINT = NULL,		
		@V_ROUTING_SERVICE_ID VARCHAR(75) = NULL,
		@TOTAL_INTERACTION_FOCUSED_TIME BIGINT = NULL,
	    @TOTAL_INTERACTION_NON_FOCUSED_TIME BIGINT = NULL,
	    @TOTAL_ACW_FOCUSED_TIME BIGINT = NULL,
	    @TOTAL_ACW_NON_FOCUSED_TIME BIGINT = NULL,
		@HANDLE_TIME BIGINT = NULL,
		@SEGMENT_RANK BIGINT = NULL,
		@SEGMENT_ROUTING_SERVICE_SK VARCHAR(50) = NULL,
		@SEGMENT_ORIGINATED_TIMESTAMP DATETIME,
		@SEGMENT_END_TIMESTAMP DATETIME

	DECLARE EMAIL_REPORT_SEGMENT_CURSOR CURSOR FOR
	SELECT CASE WHEN RONA_INDICATOR = 'T' THEN 1 ELSE 0 END AS RONA, CASE WHEN DEFERRED_INDICATOR = 'T' AND TRANSFER_INITIATED_TIMESTAMP IS NULL THEN 1 ELSE 0 END AS DEFERRED, ANSWER_TIMESTAMP, AGENT_SK, ISNULL(AFTER_CALL_WORK_DURATION,0) AS WRAPUPTIME,ACTIVE_TIME_DURATION, HOLD_DURATION, CASE WHEN TRANSFERRED_INDICATOR = 'T' AND TRANSFER_INITIATED_TIMESTAMP IS NOT NULL THEN '1' ELSE '0' END AS TRANSFERED, ROUTING_SERVICE_SK, ORIGINATED_TIMESTAMP, END_TIMESTAMP, ROW_NUMBER() OVER(ORDER BY ORIGINATED_TIMESTAMP) AS RANK FROM CDR_SEGMENTS WHERE ENGAGEMENT_ID = @CONTACT_KEY AND CONTACT_ID = @CHAT_ID ORDER BY ORIGINATED_TIMESTAMP;
	
   OPEN EMAIL_REPORT_SEGMENT_CURSOR
   FETCH NEXT FROM EMAIL_REPORT_SEGMENT_CURSOR
   INTO 
   @RONA,
   @DEFERRED,
   @ANSWERTIME,
   @AGENT_SK,
   @WRAPTIME,
   @V_ACTIVE_TIME_DURATION,
   @V_HOLD_DURATION,
   @TRANSFERED,
   @SEGMENT_ROUTING_SERVICE_SK,
   @SEGMENT_ORIGINATED_TIMESTAMP,
   @SEGMENT_END_TIMESTAMP,
   @SEGMENT_RANK
   
   WHILE @@FETCH_STATUS = 0
   BEGIN

    SELECT @TOTAL_INTERACTION_FOCUSED_TIME = INTERACTION_FOCUSED_TIME, @TOTAL_INTERACTION_NON_FOCUSED_TIME = INTERACTION_NON_FOCUSED_TIME FROM #WIDGET_INTERACTION_TIME WHERE WORKREQUEST_ID = @CONTACT_KEY AND ARRAYINDEX = @SEGMENT_RANK;

	SELECT @TOTAL_ACW_FOCUSED_TIME = ACW_FOCUSED_TIME, @TOTAL_ACW_NON_FOCUSED_TIME = ACW_NON_FOCUSED_TIME FROM #WIDGET_ACW_TIME WHERE WORKREQUEST_ID = @CONTACT_KEY AND ARRAYINDEX = @SEGMENT_RANK;
	
	SET @HANDLE_TIME = ISNULL(@TOTAL_INTERACTION_FOCUSED_TIME,0) + ISNULL(@TOTAL_ACW_FOCUSED_TIME,0) ;
	
 	SELECT TOP 1 @EMAILWRITETIME = CASE WHEN AGENT_RESPONSE_TIME IS NOT NULL AND @ANSWERTIME IS NOT NULL THEN (DATEDIFF(SS,@ANSWERTIME,AGENT_RESPONSE_TIME)) ELSE 0 END, @AGENT_RESPONSE_TIME = AGENT_RESPONSE_TIME FROM OCEANACADB.DBO.OC_EMAIL_INTERACTIONS WHERE DIRECTION = 'INCOMING' AND WORKREQUEST_ID = @CONTACT_KEY ORDER BY CREATED_TIME;	
	
	SELECT @V_ROUTING_SERVICE_ID = ROUTING_SERVICE_ID FROM DIM_ROUTING_SERVICES WHERE ROUTING_SERVICE_SK = @SEGMENT_ROUTING_SERVICE_SK;
	
	SELECT @SERVICELEVEL = ISNULL(SERVICELEVEL,0) FROM AVAYACUSTOMREPORT.DBO.VW_ROUTING_SERVICES_THRESHOLD WHERE ROUTING_SERVICE_SK = @SEGMENT_ROUTING_SERVICE_SK;  
	
	SET @SERVICELEVEL = ISNULL(@SERVICELEVEL,0);

	DECLARE 
	@PREVIOUS_SEGMENT_END_TIMESTAMP DATETIME,
	@SEGMENT_QUEUE_TIME BIGINT = 0;
	
	IF(@SEGMENT_RANK = 1)
	BEGIN
	SELECT @SEGMENT_QUEUE_TIME = DATEDIFF(SS, @CREATEDATE, @SEGMENT_ORIGINATED_TIMESTAMP);
	END
	ELSE
	BEGIN
	SELECT @PREVIOUS_SEGMENT_END_TIMESTAMP =  SEGMENT_END_TIMESTAMP FROM #SEGMENT_TIME WHERE ORDER_ID = (@SEGMENT_RANK - 1)
	SELECT @SEGMENT_QUEUE_TIME = DATEDIFF(SS, @PREVIOUS_SEGMENT_END_TIMESTAMP, @SEGMENT_ORIGINATED_TIMESTAMP);
	END

	SET @SEGMENT_QUEUE_TIME = ISNULL(@SEGMENT_QUEUE_TIME,0);

	SELECT @SERVICE_LEVEL_UPPER_THRESHOLD = @SERVICELEVEL/3600 ;

	IF(@SERVICELEVEL - @SEGMENT_QUEUE_TIME <= 0)
	 BEGIN
	  SET @AVG_BACKLOG = @SEGMENT_QUEUE_TIME - @SERVICELEVEL ;
	 END
	ELSE
	 BEGIN
	  SET @AVG_BACKLOG = '0';
	END
	
	IF(@SERVICELEVEL - @SEGMENT_QUEUE_TIME <= 0)
	 BEGIN
	  SET @BACKLOG_HR =  CAST(((CAST(@SEGMENT_QUEUE_TIME AS DECIMAL(10,2))-CAST(@SERVICELEVEL AS DECIMAL(10,2)))/CAST(3600 AS DECIMAL(10,2))) AS DECIMAL(10,4));
	 END
	ELSE
	 BEGIN
	  SET @BACKLOG_HR = '0';
	END
	
	SELECT @AVG_CYCLE_LATE = CASE WHEN ((@SERVICELEVEL - @SEGMENT_QUEUE_TIME) <= 0) THEN ((CASE WHEN ((@SERVICELEVEL - @SEGMENT_QUEUE_TIME) <= 0) THEN (@SEGMENT_QUEUE_TIME - @SERVICELEVEL )/3600 ELSE  0 END ) /@SERVICELEVEL/60/60) ELSE 0 END;
	
	
	SET @ANSWERED  = '0';
	IF(@ANSWERTIME IS NOT NULL AND @TRANSFERED != '1' AND @DEFERRED != '1' AND @SEGMENT_RANK = @SEGMENT_SIZE)
	BEGIN
	SET @ANSWERED = '1' ;
	END
	
	IF((@ANSWERED = '1' ) OR (@ABANDON = '1') OR (@TRANSFERED = '1') OR (@DEFERRED = '1'))
	BEGIN
	SELECT @WITHIN_SERVICE_LEVEL = CASE WHEN ((@SERVICELEVEL - @SEGMENT_QUEUE_TIME > 0))THEN 1 ELSE 0 END;
	SELECT @BEHIND_SERVICE_LEVEL = CASE WHEN ((@SERVICELEVEL - @SEGMENT_QUEUE_TIME <= 0))THEN 1 ELSE 0 END;
	END

	SELECT @LOGINNAME = AGENT_ID FROM DIM_AGENTS WHERE AGENT_ID <> 'UNKNOWN' AND AGENT_SK = @AGENT_SK;
	
	SET @AHT =  ISNULL(@V_ACTIVE_TIME_DURATION,0) + ISNULL(@V_HOLD_DURATION,0) + ISNULL(@WRAPTIME,0);
		
	IF(@TRANSFERED = '1')
	 BEGIN
	  SET @EXIT_REASON = 'TRANSFER';
	 END
	 ELSE IF(@DEFERRED = '1')
	 BEGIN
	  SET @EXIT_REASON = 'DEFER';
	 END
	 ELSE IF(@ANSWERTIME IS NOT NULL AND @LAST_SEGMENT_DATA = 'YES')
	 BEGIN
	  SET @EXIT_REASON = 'NORMAL';
	 END 
	ELSE IF(@DISMISSED = '1')
	 BEGIN
	  SET @EXIT_REASON = 'DISMISS';
	 END
	 ELSE IF(@CANCEL > 0)
	 BEGIN
	  SET @EXIT_REASON = 'CANCEL';
	 END
	 ELSE 
	 BEGIN
	  SET @EXIT_REASON = 'OTHERS';
	 END
	
	IF(@ANSWERED = '0' AND (@DISMISSED IS NULL OR @DISMISSED = '0') AND @CANCEL = '0' AND @TRANSFERED = '0' AND @REQUEUED = '0' AND @DEFERRED = '0')
	SET @OTHERS  =  '1' ;
	ELSE
	SET @OTHERS  =  '0' ;
	
INSERT INTO [DBO].EMAIL_DETAILED_REPORT_MULTIPLE_RECORDS
           ([START_TIME]
           ,[END_TIME]
           ,[QUEUENAME]
           ,[SUBJECT]
           ,[CREATEDATE]
           ,[SERVICELEVEL]
           ,[QUEUETIME]
           ,[WRAPTIME]
           ,[ANSWERTIME]
           ,[RONA]
           ,[ANSWERED]
           ,[TRANSFERED]
           ,[SERVICE_LEVEL_UPPER_TRESHOLD]
           ,[WITHIN_SERVICE_LEVEL]
           ,[BEHIND_SERVICE_LEVEL]
           ,[AVG_BACKLOG]
           ,[BACKLOG_HR]
           ,[AVG_CYCLE_LATE]
           ,[TOADDRESS]
           ,[FROMADDRESS]
           ,[LOGINNAME]
           ,[HT]
           ,[DISMISSED]
           ,[EMAILWRITETIME]
           ,[EXITREASON]
           ,[REQUEUED]
           ,[UTC_QUARTER_HOUR_SK]
		   ,[AGENT_SK]
		   ,[AGENT_RESPONSE_TIME]
		   ,[ENDTIME]
		   ,[OTHERS]
		   ,[CANCEL]
		   ,[CONTACTKEY]
		   ,[CHATID]
		   ,[CUSTOMER_SEGMENT]
		   ,[DEFER]
		   ,[CONTACT_DURATION]
		   ,[HOLD_DURATION]
		   ,[ACTIVE_TIME_DURATION]
		   ,[TOTAL_INTERACTION_FOCUSED_TIME]
		   ,[TOTAL_INTERACTION_NON_FOCUSED_TIME]
		   ,[TOTAL_ACW_FOCUSED_TIME]
		   ,[TOTAL_ACW_NON_FOCUSED_TIME]
		   ,[HANDLE_TIME]
		   ,[SEGMENT_ROUTING_SERVICE_SK]
		   ,[SEGMENT_QUEUE_TIME]
		   ,[SEGMENT_ORIGINATED_TIMESTAMP]
		   ,[SEGMENT_END_TIMESTAMP])
     VALUES
           (@START_TIME
           ,@END_TIME
           ,@QUEUENAME
           ,@SUBJECT
           ,@CREATEDATE
           ,@SERVICELEVEL
           ,@QUEUETIME
           ,@WRAPTIME
           ,@ANSWERTIME
           ,@RONA
           ,@ANSWERED
           ,@TRANSFERED
           ,@SERVICE_LEVEL_UPPER_THRESHOLD
           ,@WITHIN_SERVICE_LEVEL
           ,@BEHIND_SERVICE_LEVEL
           ,@AVG_BACKLOG
           ,@BACKLOG_HR
           ,@AVG_CYCLE_LATE
           ,@TOADDRESS
           ,@FROMADDRESS
           ,@LOGINNAME
           ,@AHT
           ,@DISMISSED
           ,@EMAILWRITETIME
           ,@EXIT_REASON
           ,@REQUEUED
           ,@UTC_QUARTER_HOUR_SK
		   ,@AGENT_SK
		   ,@AGENT_RESPONSE_TIME
		   ,@ENDTIME
		   ,@OTHERS
		   ,@CANCEL
		   ,@CONTACT_KEY
		   ,@CHAT_ID
		   ,@V_CUSTOMER_SEGMENT
		   ,@DEFERRED
		   ,@CONTACT_DURATION
		   ,@V_HOLD_DURATION
		   ,@V_ACTIVE_TIME_DURATION
		   ,@TOTAL_INTERACTION_FOCUSED_TIME
		   ,@TOTAL_INTERACTION_NON_FOCUSED_TIME
		   ,@TOTAL_ACW_FOCUSED_TIME
		   ,@TOTAL_ACW_NON_FOCUSED_TIME
		   ,@HANDLE_TIME
		   ,@SEGMENT_ROUTING_SERVICE_SK
		   ,@SEGMENT_QUEUE_TIME
		   ,@SEGMENT_ORIGINATED_TIMESTAMP
		   ,@SEGMENT_END_TIMESTAMP)
		
	FETCH NEXT FROM EMAIL_REPORT_SEGMENT_CURSOR
    INTO
	@RONA,
    @DEFERRED,
    @ANSWERTIME,
    @AGENT_SK,
    @WRAPTIME,
	@V_ACTIVE_TIME_DURATION,
	@V_HOLD_DURATION,
	@TRANSFERED,
	@SEGMENT_RANK
	
	--IF @@FETCH_STATUS!=0
    --BEGIN
    --    PRINT 'AND FINALLY'
	--	SET @LAST_SEGMENT_DATA = 'YES';
    --END
	
	END
	CLOSE EMAIL_REPORT_SEGMENT_CURSOR;
     DEALLOCATE EMAIL_REPORT_SEGMENT_CURSOR;

	 DROP TABLE #WIDGET_INTERACTION_TIME;
    DROP TABLE #WIDGET_ACW_TIME;
	DROP TABLE #SEGMENT_TIME;

 --END
 END
	 FETCH NEXT FROM EMAIL_REPORT_DATA_CURSOR
	 INTO 
     @CREATEDATE
    ,@QUEUENAME
    ,@CONTACT_KEY
    ,@CHAT_ID 
    ,@QUEUETIME
    ,@ABANDON
    ,@TRANSFERED
	,@FROMADDRESS
    ,@CONTACT_DURATION 
    ,@HANDLING_TIME_DURATION
	,@ENDTIME
	,@V_UNKNOWN
	,@V_ACTIVE_TIME_DURATION
	,@V_HOLD_DURATION
	
	END

	 CLOSE EMAIL_REPORT_DATA_CURSOR;
     DEALLOCATE EMAIL_REPORT_DATA_CURSOR;
	
	END
	
    UPDATE CONFIG_PARAMS SET PARAM_VALUE= CONVERT(VARCHAR(50), @END_TIME, 121) WHERE PARAM_NAME = @V_PARAM_NAME; 
	SET @STATUS = 'SUCCESS';    
    RETURN 0

END